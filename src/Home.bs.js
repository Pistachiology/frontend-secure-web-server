// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Fetcher = require("./Fetcher.bs.js");
var WithHeader = require("./WithHeader.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.statelessComponent("Home Page");

function handleClick(param, _) {
  console.log("clicked!", param[0]);
  return /* () */0;
}

function s(prim) {
  return prim;
}

function make(message, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return ReasonReact.element(/* None */0, /* None */0, WithHeader.make(/* array */[ReasonReact.element(/* None */0, /* None */0, Fetcher.RLimit[/* make */3]((function (state) {
                                          var match = state[/* status */2] === /* Fetching */1;
                                          if (match) {
                                            return React.createElement("div", {
                                                        key: "1"
                                                      }, "Loading");
                                          } else {
                                            return React.createElement("div", {
                                                        key: "2",
                                                        onClick: (function (e) {
                                                            return Curry._2(self[/* handle */0], handleClick, /* tuple */[
                                                                        state,
                                                                        e
                                                                      ]);
                                                          })
                                                      }, message, state[/* data */0][/* curAsLimit */2].toString());
                                          }
                                        }), /* None */0, /* None */0, /* None */0, /* array */[]))]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.handleClick = handleClick;
exports.s = s;
exports.make = make;
/* component Not a pure module */
